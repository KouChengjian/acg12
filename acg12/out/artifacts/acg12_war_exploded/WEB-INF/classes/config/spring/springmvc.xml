<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">


    <!-- 组件扫描器 可以扫描controller、service、...这里让扫描controller，指定controller的包 -->
    <context:component-scan base-package="com.acg12"></context:component-scan>
    <context:component-scan base-package="com.acg12.utils"></context:component-scan>
    <!--<context:component-scan base-package="com.acg12.controller" use-default-filters="false">-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    <!--</context:component-scan>-->

    <!--<mvc:resources mapping="/swagger/**" location="/WEB-INF/swagger/"/>-->

    <!--<mvc:annotation-driven conversion-service="conversionService"
                   validator="validator"/>-->
    <!-- 启用spring mvc 注解 -->
    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>
    <!-- 视图解析器 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置jsp路径的前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- 配置jsp路径的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 自定义参数绑定 -->
    <!--<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        &lt;!&ndash; 转换器 &ndash;&gt;
        <property name="converters">
            <list>
                &lt;!&ndash; 日期类型转换 &ndash;&gt;
                <bean class="com.ssm.controller.converter.CustomDateConverter"/>
            </list>
        </property>
    </bean>-->

    <!-- 文件上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为5MB -->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>

    <!-- 校验器 -->
    <!--<bean id="validator"-->
          <!--class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
        <!--&lt;!&ndash; hibernate校验器&ndash;&gt;-->
        <!--<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
        <!--&lt;!&ndash; 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties &ndash;&gt;-->
        <!--<property name="validationMessageSource" ref="messageSource"/>-->
    <!--</bean>-->
    <!-- 校验错误信息配置文件 -->
    <!--<bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        &lt;!&ndash; 资源文件名&ndash;&gt;
        <property name="basenames">
            <list>
                <value>classpath:CustomValidationMessages</value>
            </list>
        </property>
        &lt;!&ndash; 资源文件编码格式 &ndash;&gt;
        <property name="fileEncodings" value="utf-8"/>
        &lt;!&ndash; 对资源文件内容缓存时间，单位秒 &ndash;&gt;
        <property name="cacheSeconds" value="120"/>
    </bean>-->

    <!--全局异常处理器 只要实现HandlerExceptionResolver接口就是全局异常处理器-->
    <!--<bean class="com.acg12.exception.CustomExceptionResolver"></bean>-->

    <!-- 将 springSwaggerConfig加载到spring容器 -->
    <!--<bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig"/>
    <bean id="SwaggerConfig" class="com.ssm.conf.SwaggerConfig"/>-->


    <!-- 缓存配置 -->
    <!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <!-- Spring自己的基于java.util.concurrent.ConcurrentHashMap实现的缓存管理器(该功能是从Spring3.1开始提供的) -->
    <!--
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean name="myCache" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
            </set>
        </property>
    </bean>

    <!- 若只想使用Spring自身提供的缓存器,则注释掉下面的两个关于Ehcache配置的bean,并启用上面的SimpleCacheManager即可 -->
    <!-- Spring提供的基于的Ehcache实现的缓存管理器 -->

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="cacheManagerFactory"/>
    </bean>
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:config/cache/ehcache.xml"/>
    </bean>

</beans>